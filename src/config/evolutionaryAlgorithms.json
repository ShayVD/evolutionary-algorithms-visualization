[
  {
    "id": "ga",
    "name": "Genetic Algorithm",
    "description": "A search heuristic inspired by the process of natural selection that belongs to the class of evolutionary algorithms.",
    "keyFeatures": [
      "Based on natural selection principles",
      "Uses crossover and mutation operators",
      "Suitable for both continuous and discrete problems",
      "Easy to implement and understand"
    ],
    "defaultParameters": {
      "populationSize": 50,
      "maxGenerations": 100,
      "crossoverRate": 0.8,
      "mutationRate": 0.1,
      "selectionMethod": "tournament",
      "tournamentSize": 3,
      "elitism": 1
    },
    "icon": "üß¨",
    "filePath": "./implementations/GeneticAlgorithm"
  },
  {
    "id": "es",
    "name": "Evolution Strategy",
    "description": "An optimization technique based on ideas of adaptation and evolution, particularly suitable for continuous parameter optimization.",
    "keyFeatures": [
      "Self-adaptive mutation parameters",
      "Used for real-valued optimization problems",
      "Supports (Œº,Œª) and (Œº+Œª) selection strategies",
      "Handles constraints effectively"
    ],
    "defaultParameters": {
      "populationSize": 30,
      "maxGenerations": 100,
      "offspringSize": 60,
      "selectionStrategy": "comma",
      "initialStepSize": 1.0,
      "adaptationFactor": 0.7
    },
    "icon": "üîÑ",
    "filePath": "./implementations/EvolutionStrategy"
  },
  {
    "id": "de",
    "name": "Differential Evolution",
    "description": "A stochastic population-based optimization algorithm that is well-suited to continuous optimization problems.",
    "keyFeatures": [
      "Simple but powerful global optimization algorithm", 
      "Few control parameters",
      "Fast convergence",
      "Works well on multimodal, non-differentiable, and noisy functions"
    ],
    "defaultParameters": {
      "populationSize": 50,
      "maxGenerations": 100,
      "scalingFactor": 0.5,
      "crossoverRate": 0.7,
      "strategy": "rand/1/bin"
    },
    "icon": "‚ö°",
    "filePath": "./implementations/DifferentialEvolution"
  },
  {
    "id": "pso",
    "name": "Particle Swarm Optimization",
    "description": "A computational method that optimizes a problem by iteratively trying to improve candidate solutions based on particle movement.",
    "keyFeatures": [
      "Inspired by social behavior of bird flocking or fish schooling",
      "Particles move in solution space guided by personal and global best",
      "Simple implementation with few parameters",
      "Effective for continuous optimization problems"
    ],
    "defaultParameters": {
      "populationSize": 40,
      "maxGenerations": 100,
      "inertiaWeight": 0.72,
      "cognitiveCoefficient": 1.49,
      "socialCoefficient": 1.49,
      "maxVelocity": 4.0
    },
    "icon": "üê¶",
    "filePath": "./implementations/ParticleSwarmOptimization"
  },
  {
    "id": "abc",
    "name": "Artificial Bee Colony",
    "description": "A swarm-based metaheuristic algorithm inspired by the foraging behavior of honey bees, consisting of employed bees, onlooker bees, and scout bees.",
    "keyFeatures": [
      "Inspired by the intelligent foraging behavior of honey bees",
      "Balances exploration and exploitation effectively",
      "Self-organizing and decentralized system",
      "Robust for multimodal and complex optimization problems"
    ],
    "defaultParameters": {
      "populationSize": 40,
      "maxGenerations": 100,
      "limit": 20,
      "scalingFactor": 0.5
    },
    "icon": "üêù",
    "filePath": "./implementations/ArtificialBeeColony"
  },
  {
    "id": "sa",
    "name": "Simulated Annealing",
    "description": "A probabilistic technique for approximating the global optimum, inspired by the annealing process in metallurgy.",
    "keyFeatures": [
      "Can escape local optima through probabilistic acceptance of worse solutions",
      "Gradually decreases exploration in favor of exploitation",
      "Simple to implement with few parameters",
      "Effective for complex, multimodal landscapes"
    ],
    "defaultParameters": {
      "populationSize": 1,
      "maxGenerations": 1000,
      "initialTemperature": 100.0,
      "coolingRate": 0.95,
      "neighborhoodSize": 0.1,
      "minTemperature": 0.01
    },
    "icon": "üî•",
    "filePath": "./implementations/SimulatedAnnealing"
  }
] 